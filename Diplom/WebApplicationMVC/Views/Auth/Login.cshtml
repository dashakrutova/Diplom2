@model LoginFormModel

<!DOCTYPE html>
<html>
<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="styles.css">
<style>
    body {
        margin: 0;
    }

    /* Центрирование только контейнера */
    .center-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 110px;
    }

    .login-class {
        width: 500px;
        height: 400px;
        padding: 20px;
        border-radius: 10px;
        background-color: #ECF7FF;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
        display: flex;
        flex-direction: column; /* Для вертикального выравнивания */
        justify-content: center; /* Центрирование содержимого */
    }

    .login-class h2 {
        margin-bottom: 30px; /* Увеличиваем отступ под надписью Авторизация */
        font-size: 24px; /* Размер шрифта для заголовка */
        color: #333; /* Цвет заголовка */
    }

    .login-class label {
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
        text-align: left; /* Выровняли текст лейбла по левому краю */
        width: 80%; /* Делаем ширину равной input */
        max-width: 300px; /* Ограничение ширины */
        margin: 0 auto; /* Центрируем по горизонтали */
    }

    .login-class input {
        width: 80%; /* Задаем одинаковую ширину */
        max-width: 300px; /* Ограничение ширины */
        padding: 10px;
        margin: 5px auto 15px; /* Центрируем инпут внутри контейнера и добавляем отступы */
        border: 1px solid black;
        border-radius: 15px;
        box-sizing: border-box;
    }

    .btn-log {
        width: 80%; /* Совпадает с input */
        max-width: 300px; /* Ограничение ширины */
        background-color: #1A96F6;
        color: white;
        border: none;
        border-radius: 15px; /* Закругление аналогично input */
        font-size: 18px;
        padding: 10px;
        transition: background-color 0.3s;
        margin: 35px auto 0; /* Отступ сверху и выравнивание */
        cursor: pointer;
    }

    .btn-log:hover {
        background-color: #0377D1;
    }

    .password-container {
        position: relative;
    }

    .password-container input {
        padding-right: 2.5rem; /* Отступ для размещения кнопки внутри */
    }

    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        cursor: pointer;
    }
</style>
</head>
<body>
    <div class="center-container">
        <div class="login-class">
            <h2>Авторизация</h2>

            <form asp-action="Login" method="post">
                <div>
                    <label asp-for="Login">Email</label>
                    <input asp-for="Login" />
                    <span asp-validation-for="Login" class="text-danger"></span>
                </div>

                <div>
                    <label asp-for="Password">Пароль</label>
                    <div class="password-container">
                        <input type="password" asp-for="Password" id="password-input" />
                        <span asp-validation-for="Password" class="text-danger"></span>

                        <button type="button" id="toggle-password" class="password-toggle">
                            <i class="bi bi-eye" id="password-icon"></i>
                        </button>
                    </div>
                </div>

                <button class="btn-log" type="submit">Войти</button>
                <p>
                    <a asp-action="ForgotPassword" asp-controller="Auth">Забыли пароль?</a>
                </p>

            </form>
        </div>
    </div>
    <script>
        document.getElementById('toggle-password').addEventListener('click', function () {
            const passwordInput = document.getElementById('password-input');
            const passwordIcon = document.getElementById('password-icon');
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            passwordIcon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash'; // Меняем иконку
        });
    </script>
</body>

</html>

@* @if(User.Identity?.IsAuthenticated ?? false)
{
    <p>Пользователь авторизован</p>
    <form asp-controller="Auth" asp-action="Logout" method="post"> 
        <button type="submit">Logout</button>
    </form>
}
else
{
    <p>Пользователь НЕ авторизован</p>
}

<p>
    Текущий пользователь = @(User.Identity?.Name ?? "Anonim")
</p>

<h2>Claims</h2>
@if(User.Claims.Any())
{
    <ul>
        @foreach(var claim in User.Claims)
        {
            <li>@claim.ToString()</li>
        }
    </ul>
}
else
{
    <p>No claims</p>
}
 *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}